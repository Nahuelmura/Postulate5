@page
@model LoginModel

@{
    ViewData["Title"] = "";
}



<body class="fondo_loguin " id="#contenido">
    

       <div class=" "> <!-- Contenedor del texto que cambia -->
                        <div class="" id="textoSuperpuesto_loguin">
                            haz una cuenta
                        </div>
        </div>


    @* <div class="contenedor_texto_loguin "> <!-- Contenedor del texto que cambia -->
                        <div class="ajustar-texto" id="textoSuperpuesto_loguin_lado">
                        Bienvenido
                        </div>
        </div>  *@


<h1>@ViewData["Title"]</h1>
<section id="login">
    <div class="login-box">
            <form id="cuenta" method="post">
           <h2 class="h2l">Postula  <i class="fa-solid fa-hammer custom-icon"></i>e.Com</h2>
                <h3 class="h3l">Inicia Sesion</h3>
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="input-box">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true"/>
                    <label asp-for="Input.Email" class="form-label">Email</label>

                </div>
                <div class="input-box">
                    <input type="password" asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true"/>
                    <label asp-for="Input.Password" class="form-label">Password</label>
                </div>
                <div class="remember">
                    <label asp-for="Input.RememberMe" class="form-label text-light">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div>
                    <button id="button" type="submit" class="w-100 btn btn-lg btn-primary">Inciar sesión</button>
                </div>
                <div class="register-link">
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">¿Olvidaste tu contraseña?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Crear una cuenta</a>
                    </p>
                    @* <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Volver a enviar confirmacion por email</a>
                    </p> *@
                </div>
            </form>
    </div>
</section>

@* <h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-4">
        <section>
            <form id="account" method="post">
                <h2>Use a local account to log in.</h2>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.Email" class="form-label">Email</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label asp-for="Input.Password" class="form-label">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                    <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to log in.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div> *@
</body>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
    const images = [
        '/img/Obrero1.jpg',
        '/img/obrero2.jpg',
        '/img/obrero3.jpeg',
        '/img/obrero4.jpg',
        '/img/obrero5.jpeg',
    ];

    let currentIndex = 0;

    function changeBackground() {
        currentIndex = (currentIndex + 1) % images.length; // Cambia al siguiente índice
        document.body.style.backgroundImage = `url('${images[currentIndex]}')`;
    }

    setInterval(changeBackground, 5000); // Cambia la imagen cada 5 segundos








          const mensajes1 = [
    'Busca profesionales',
    'Solicita la ayuda de profesionales',
    'Ofrece tus servicios y habilidades',
];

const mensajes2 = [
    'Ingresa',
    'Regístrate  gratis',
   
];

let currentTextIndex1 = 0;
let currentTextIndex2 = 0;

function changeText1() {
    const textoElemento1 = document.getElementById('textoSuperpuesto_loguin');
    textoElemento1.classList.add('transition-text');

    setTimeout(() => {
        currentTextIndex1 = (currentTextIndex1 + 1) % mensajes1.length;
        textoElemento1.textContent = mensajes1[currentTextIndex1];
        textoElemento1.classList.remove('transition-text');
    }, 1000);
}

function changeText2() {
    const textoElemento2 = document.getElementById('textoSuperpuesto_loguin_lado');
    textoElemento2.classList.add('transition-text');

    setTimeout(() => {
        currentTextIndex2 = (currentTextIndex2 + 1) % mensajes2.length;
        textoElemento2.textContent = mensajes2[currentTextIndex2];
        textoElemento2.classList.remove('transition-text');
    }, 1000);
}

// Cambia el texto en intervalos intercalados
setInterval(changeText1, 5000); // Cambia el texto del primer elemento cada 5 segundos
setTimeout(() => {
    setInterval(changeText2, 5000); // Cambia el texto del segundo elemento cada 5 segundos, con un retraso inicial
}, 2500); // Retraso de 2.5 segundos para intercalar

</script>

<script>
    // Reemplaza el historial para desactivar "atrás"
    history.pushState(null, null, location.href);
    window.onpopstate = function () {
        history.go(1); // Forzar la navegación hacia adelante
    };
</script>
}
